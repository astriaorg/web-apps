@import "tailwindcss";

@config '../tailwind.config.js';

@theme {
  --font-sans: var(--font-switzer), "sans-serif";
  --font-mono: var(--font-nb-akademie-mono), "monospace";
  --font-dot: var(--font-dot-matrix), "monospace";
}

@theme {
  /* [Deprecated] Base Colors */
  --color-white: hsl(0, 0%, 96%);
  --color-whitest: hsl(0, 0%, 100%);
  --color-semi-white: hsla(0, 0%, 96%, 0.06);
  --color-black: hsl(203, 45%, 4%);
  --color-grey-dark: hsl(0, 0%, 20%);
  --color-grey-medium: hsl(0, 0%, 40%);
  --color-grey-light: hsl(0, 0%, 60%);
  --color-grey-lighter: hsl(0, 0%, 80%);
  --color-red: hsl(2, 58%, 46%);
  --color-orange: hsl(24, 96%, 51%);
  --color-orange-soft: hsl(35, 87%, 54%);
  --color-green: hsl(140, 35%, 36%);
  --color-blue-light: hsl(203, 35%, 60%);
  --color-yellow: hsl(43, 71%, 58%);

  /* [Deprecated] Semantic Colors */
  --background: 203 45% 4%;
  --foreground: var(--color-black);
  --muted: var(--color-grey-dark);
  --muted-foreground: var(--color-grey-light);
  --accent: var(--color-orange-soft);
  --accent-foreground: 210 40% 98%;
  --popover: 224 71% 4%;
  --popover-foreground: 215 20.2% 65.1%;
  --border: 0, 0%, 20%;
  --input: 216 34% 17%;
  --card: 224 71% 4%;
  --card-foreground: 213 31% 91%;
  --primary: 210 40% 98%;
  --primary-foreground: 222.2 47.4% 1.2%;
  --secondary: 222.2 47.4% 11.2%;
  --secondary-foreground: 210 40% 98%;
  --destructive: 0 63% 31%;
  --destructive-foreground: 210 40% 98%;
  --ring: 216 34% 17%;

  /* Primitives */
  --color-gray-0: 0 0% 100%;
  --color-gray-50: 0 0% 96%;
  --color-gray-100: 0 0% 90%;
  --color-gray-150: 0 0% 85%;
  --color-gray-200: 0 0% 80%;
  --color-gray-250: 0 0% 75%;
  --color-gray-300: 0 0% 70%;
  --color-gray-350: 0 0% 65%;
  --color-gray-400: 0 0% 60%;
  --color-gray-450: 0 0% 55%;
  --color-gray-500: 0 0% 50%;
  --color-gray-550: 0 0% 45%;
  --color-gray-600: 0 0% 40%;
  --color-gray-650: 0 0% 35%;
  --color-gray-700: 0 0% 30%;
  --color-gray-750: 0 0% 25%;
  --color-gray-800: 0 0% 20%;
  --color-gray-850: 0 0% 15%;
  --color-gray-900: 0 0% 10%;
  --color-gray-950: 0 0% 5%;
  --color-gray-1000: 0 0% 0%;

  --color-orange-100: 20 100% 54%;
  --color-green-100: 70 100% 75%;
  --color-green-200: 125 53% 66%;
  --color-yellow-100: 53 100% 73%;
  --color-yellow-200: 40 100% 54%;
  --color-red-100: 351 100% 72%;
  --color-red-200: 351 100% 60%;

  /* Tokens */
  --color-icon-default: ;
  --color-icon-light: ;
  --color-icon-subdued: ;

  --color-stroke-default: ;
  --color-stroke-active: ;

  --color-typography-default: ;
  --color-typography-secondary: ;
  --color-typography-inverted: ;
  --color-typography-light: ;
  --color-typography-subdued: ;
  --color-typography-black: ;

  --color-background-default: ;
  --color-surface-1: ;
  --color-surface-2: ;
  --color-surface-3: ;
  --color-surface-inverted: ;

  --color-brand: ;
  --color-success: ;
  --color-warning: ;
  --color-danger: ;

  --chart-1:;
  --chart-2: ;
  --chart-3: ;
  --chart-4:;
  --chart-5: ;
}

html[data-theme="light"] {
  --color-icon-default: hsl(var(--color-gray-150));
  --color-icon-light: hsl(var(--color-gray-650));
  --color-icon-subdued: hsl(var(--color-gray-500));

  --color-stroke-default: hsl(var(--color-gray-800));
  --color-stroke-active: hsl(var(--color-gray-250));

  --color-typography-default: hsl(var(--color-gray-0));
  --color-typography-secondary: hsl(var(--color-gray-150));
  --color-typography-inverted: hsl(var(--color-gray-1000));
  --color-typography-light: hsl(var(--color-gray-600));
  --color-typography-subdued: hsl(var(--color-gray-300));
  --color-typography-black: hsl(var(--color-gray-1000));

  --color-background-default: hsl(var(--color-gray-1000));
  --color-surface-1: hsl(var(--color-gray-900));
  --color-surface-2: hsl(var(--color-gray-850));
  --color-surface-3: hsl(var(--color-gray-800));
  --color-surface-inverted: hsl(var(--color-gray-0));

  --color-brand: hsl(var(--color-orange-100));
  --color-success: hsl(var(--color-green-100));
  --color-warning: hsl(var(--color-yellow-100));
  --color-danger: hsl(var(--color-red-100));

  --chart-1: 12 76% 61%;
  --chart-2: 173 58% 39%;
  --chart-3: 197 37% 24%;
  --chart-4: 43 74% 66%;
  --chart-5: 27 87% 67%;
}

html[data-theme="dark"] {
  --color-icon-default: hsl(var(--color-gray-150));
  --color-icon-light: hsl(var(--color-gray-650));
  --color-icon-subdued: hsl(var(--color-gray-500));

  --color-stroke-default: hsl(var(--color-gray-800));
  --color-stroke-active: hsl(var(--color-gray-250));

  --color-typography-default: hsl(var(--color-gray-0));
  --color-typography-secondary: hsl(var(--color-gray-150));
  --color-typography-inverted: hsl(var(--color-gray-1000));
  --color-typography-light: hsl(var(--color-gray-600));
  --color-typography-subdued: hsl(var(--color-gray-300));
  --color-typography-black: hsl(var(--color-gray-1000));

  /* Updated background color to match bridge.astria.org */
  --color-background-default: hsl(203, 45%, 4%);
  --color-surface-1: hsl(var(--color-gray-900));
  --color-surface-2: hsl(var(--color-gray-850));
  --color-surface-3: hsl(var(--color-gray-800));
  --color-surface-inverted: hsl(var(--color-gray-0));

  --color-brand: hsl(var(--color-orange-100));
  --color-success: hsl(var(--color-green-200));
  --color-warning: hsl(var(--color-yellow-200));
  --color-danger: hsl(var(--color-red-200));

  --chart-1: 220 70% 50%;
  --chart-2: 160 60% 45%;
  --chart-3: 30 80% 55%;
  --chart-4: 280 65% 60%;
  --chart-5: 340 75% 55%;
}

@theme {
  --animate-fade-in: fade-in 0.3s ease-in-out;
  --animate-fade-out: fade-out 0.3s ease-in-out;
  --animate-accordion-down: accordion-down 0.2s ease-out;
  --animate-accordion-up: accordion-up 0.2s ease-out;
  --animate-shimmer: shimmer 6000ms ease-in-out infinite;
  --animate-success-tick: success-tick 450ms ease 500ms forwards;
  --animate-success-circle-outline: success-circle-outline 300ms ease-in-out
    300ms forwards;
  --animate-success-circle-fill: success-circle-fill 300ms ease-out 500ms
    forwards;

  @keyframes fade-in {
    0% {
      opacity: 0;
    }
    100% {
      opacity: 1;
    }
  }

  @keyframes fade-out {
    0% {
      opacity: 1;
    }
    100% {
      opacity: 0;
    }
  }

  @keyframes accordion-down {
    from {
      height: 0;
    }
    to {
      height: var(--radix-accordion-content-height);
    }
  }

  @keyframes accordion-up {
    from {
      height: var(--radix-accordion-content-height);
    }
    to {
      height: 0;
    }
  }

  @keyframes shimmer {
    from {
      background-position: 200% 0;
    }
    to {
      background-position: -200% 0;
    }
  }

  @keyframes success-tick {
    0% {
      stroke-dashoffset: 16px;
      opacity: 1;
    }
    100% {
      stroke-dashoffset: 31px;
      opacity: 1;
    }
  }

  @keyframes success-circle-outline {
    0% {
      stroke-dashoffset: 72px;
      opacity: 1;
    }
    100% {
      stroke-dashoffset: 0px;
      opacity: 1;
    }
  }

  @keyframes success-circle-fill {
    0% {
      opacity: 0;
    }
    100% {
      opacity: 1;
    }
  }

  @keyframes lightUpOrange {
    0% {
      opacity: 0.2;
      box-shadow: none;
      border-color: #f5f5f5;
    }
    50% {
      opacity: 1;
      box-shadow:
        0 0 10px #df5822,
        0 0 20px #f09226;
      border-color: #f09226;
    }
    100% {
      opacity: 0.2;
      box-shadow: none;
      border-color: #f5f5f5;
    }
  }
}

@layer base {
  html,
  body {
    @apply h-screen;
  }
  body {
    @apply m-0 p-0 bg-background-default font-sans antialiased text-typography-default;
  }
  button {
    @apply cursor-pointer;
  }
}

@utility gradient-background {
  @apply border border-solid border-transparent bg-radial-dark;
  box-shadow: inset 1px 1px 1px -1px hsla(0, 0%, 100%, 0.5);
}

@utility gradient-container {
  @apply gradient-background p-4 sm:p-4 md:p-8 lg:p-12 rounded-2xl;
}

@utility normalize-input {
  @apply flex-1 bg-transparent focus:outline-hidden placeholder:text-grey-light [appearance:textfield] [&::-webkit-outer-spin-button]:appearance-none [&::-webkit-inner-spin-button]:appearance-none;
}

@utility fade-out {
  @apply animate-fade-out;
}

@utility fade-in {
  @apply animate-fade-in;
}

@utility is-text-overflow {
  @apply overflow-hidden text-ellipsis whitespace-nowrap;
}

/**
 * TailwindCSS v4.0 compatible replacement for `tailwindcss-animate`.
 *
 * WARNING: The asterisks are not supported by some formatters and linters. You
 * might want to exclude this file from formatters and linters for now.
 *
 * @author Luca Bosin <https://github.com/Wombosvideo>
 * @license MIT
 */

@theme inline {
  --animation-delay-0: 0s;
  --animation-delay-75: 75ms;
  --animation-delay-100: 0.1s;
  --animation-delay-150: 0.15s;
  --animation-delay-200: 0.2s;
  --animation-delay-300: 0.3s;
  --animation-delay-500: 0.5s;
  --animation-delay-700: 0.7s;
  --animation-delay-1000: 1s;

  --animation-repeat-0: 0;
  --animation-repeat-1: 1;
  --animation-repeat-infinite: infinite;

  --animation-direction-normal: normal;
  --animation-direction-reverse: reverse;
  --animation-direction-alternate: alternate;
  --animation-direction-alternate-reverse: alternate-reverse;

  --animation-fill-mode-none: none;
  --animation-fill-mode-forwards: forwards;
  --animation-fill-mode-backwards: backwards;
  --animation-fill-mode-both: both;

  --animate-in: var(--tw-duration, 150ms) var(--tw-ease, ease) enter;
  --animate-out: var(--tw-duration, 150ms) var(--tw-ease, ease) exit;

  --percentage-0: 0;
  --percentage-5: 0.05;
  --percentage-10: 0.1;
  --percentage-15: 0.15;
  --percentage-20: 0.2;
  --percentage-25: 0.25;
  --percentage-30: 0.3;
  --percentage-35: 0.35;
  --percentage-40: 0.4;
  --percentage-45: 0.45;
  --percentage-50: 0.5;
  --percentage-55: 0.55;
  --percentage-60: 0.6;
  --percentage-65: 0.65;
  --percentage-70: 0.7;
  --percentage-75: 0.75;
  --percentage-80: 0.8;
  --percentage-85: 0.85;
  --percentage-90: 0.9;
  --percentage-95: 0.95;
  --percentage-100: 1;

  --translate-1/2: 50%;
  --translate-1/3: 33.333333%;
  --translate-2/3: 66.666667%;
  --translate-1/4: 25%;
  --translate-2/4: 50%;
  --translate-3/4: 75%;
  --translate-full: 100%;
  --translate-px: 1px;
  --translate-0: 0px;
  --translate-0.5: 0.125rem;
  --translate-1: 0.25rem;
  --translate-1.5: 0.375rem;
  --translate-2: 0.5rem;
  --translate-2.5: 0.625rem;
  --translate-3: 0.75rem;
  --translate-3.5: 0.875rem;
  --translate-4: 1rem;
  --translate-5: 1.25rem;
  --translate-6: 1.5rem;
  --translate-7: 1.75rem;
  --translate-8: 2rem;
  --translate-9: 2.25rem;
  --translate-10: 2.5rem;
  --translate-11: 2.75rem;
  --translate-12: 3rem;
  --translate-14: 3.5rem;
  --translate-16: 4rem;
  --translate-20: 5rem;
  --translate-24: 6rem;
  --translate-28: 7rem;
  --translate-32: 8rem;
  --translate-36: 9rem;
  --translate-40: 10rem;
  --translate-44: 11rem;
  --translate-48: 12rem;
  --translate-52: 13rem;
  --translate-56: 14rem;
  --translate-60: 15rem;
  --translate-64: 16rem;
  --translate-72: 18rem;
  --translate-80: 20rem;
  --translate-96: 24rem;

  @keyframes enter {
    from {
      opacity: var(--tw-enter-opacity, 1);
      transform: translate3d(
          var(--tw-enter-translate-x, 0),
          var(--tw-enter-translate-y, 0),
          0
        )
        scale3d(
          var(--tw-enter-scale, 1),
          var(--tw-enter-scale, 1),
          var(--tw-enter-scale, 1)
        )
        rotate(var(--tw-enter-rotate, 0));
    }
  }

  @keyframes exit {
    to {
      opacity: var(--tw-exit-opacity, 1);
      transform: translate3d(
          var(--tw-exit-translate-x, 0),
          var(--tw-exit-translate-y, 0),
          0
        )
        scale3d(
          var(--tw-exit-scale, 1),
          var(--tw-exit-scale, 1),
          var(--tw-exit-scale, 1)
        )
        rotate(var(--tw-exit-rotate, 0));
    }
  }
}

/*
 * Tailwind's default `duration` utility sets the `--tw-duration` variable, so
 * can set `animation-duration` directly in the animation definition in the
 * `@theme` section above. Same goes for the `animation-timing-function`, set
 * with `--tw-ease`.
 */

@utility delay-* {
  animation-delay: calc(--value(number) * 1ms);
  animation-delay: --value(--animation-delay- *, [duration], [ *]);
}

@utility repeat-* {
  animation-iteration-count: --value(--animation-repeat- *, integer);
}

@utility direction-* {
  animation-direction: --value(--animation-direction- *);
}

@utility fill-mode-* {
  animation-fill-mode: --value(--animation-fill-mode- *);
}

@utility running {
  animation-play-state: running;
}
@utility paused {
  animation-play-state: paused;
}

@utility fade-in {
  --tw-enter-opacity: 0;
}
@utility fade-in-* {
  --tw-enter-opacity: --value(--percentage- *, [ *]);
}

@utility fade-out {
  --tw-exit-opacity: 0;
}
@utility fade-out-* {
  --tw-exit-opacity: --value(--percentage- *, [ *]);
}

@utility zoom-in {
  --tw-enter-scale: 0;
}
@utility zoom-in-* {
  --tw-enter-scale: calc(--value([percentage]) / 100%);
  --tw-enter-scale: calc(--value([ratio], [number]));
  --tw-enter-scale: --value(--percentage- *);
}

@utility zoom-out {
  --tw-exit-scale: 0;
}
@utility zoom-out-* {
  --tw-exit-scale: calc(--value([percentage]) / 100%);
  --tw-exit-scale: calc(--value([ratio], [number]));
  --tw-exit-scale: --value(--percentage- *);
}

@utility spin-in {
  --tw-enter-rotate: 30deg;
}
@utility spin-in-* {
  --tw-enter-rotate: calc(--value(number) * 1deg);
  --tw-enter-rotate: --value(--rotate- *, [angle]);
}

@utility spin-out {
  --tw-exit-rotate: 30deg;
}
@utility spin-out-* {
  --tw-exit-rotate: calc(--value(number) * 1deg);
  --tw-exit-rotate: --value(--rotate- *, [angle]);
}

@utility slide-in-from-top {
  --tw-enter-translate-y: -100%;
}
@utility slide-in-from-top-* {
  --tw-enter-translate-y: calc(--value(integer) * var(--spacing) * -1);
  --tw-enter-translate-y: calc(
    --value(--translate- *, [percentage], ratio, [length]) * -1
  );
}

@utility slide-in-from-bottom {
  --tw-enter-translate-y: 100%;
}
@utility slide-in-from-bottom-* {
  --tw-enter-translate-y: calc(--value(integer) * var(--spacing));
  --tw-enter-translate-y: --value(
    --translate- *,
    [percentage],
    ratio,
    [length]
  );
}
@utility slide-in-from-left {
  --tw-enter-translate-x: -100%;
}
@utility slide-in-from-left-* {
  --tw-enter-translate-x: calc(--value(integer) * var(--spacing) * -1);
  --tw-enter-translate-x: calc(
    --value(--translate- *, [percentage], ratio, [length]) * -1
  );
}
@utility slide-in-from-right {
  --tw-enter-translate-x: 100%;
}
@utility slide-in-from-right-* {
  --tw-enter-translate-x: calc(--value(integer) * var(--spacing));
  --tw-enter-translate-x: --value(
    --translate- *,
    [percentage],
    ratio,
    [length]
  );
}

@utility slide-out-to-top {
  --tw-exit-translate-y: -100%;
}
@utility slide-out-to-top-* {
  --tw-exit-translate-y: calc(--value(integer) * var(--spacing) * -1);
  --tw-exit-translate-y: calc(
    --value(--translate- *, [percentage], ratio, [length]) * -1
  );
}
@utility slide-out-to-bottom {
  --tw-exit-translate-y: 100%;
}
@utility slide-out-to-bottom-* {
  --tw-exit-translate-y: calc(--value(integer) * var(--spacing));
  --tw-exit-translate-y: --value(--translate- *, [percentage], ratio, [length]);
}
@utility slide-out-to-left {
  --tw-exit-translate-x: -100%;
}
@utility slide-out-to-left-* {
  --tw-exit-translate-x: calc(--value(integer) * var(--spacing) * -1);
  --tw-exit-translate-x: calc(
    --value(--translate- *, [percentage], ratio, [length]) * -1
  );
}
@utility slide-out-to-right {
  --tw-exit-translate-x: 100%;
}
@utility slide-out-to-right-* {
  --tw-exit-translate-x: calc(--value(integer) * var(--spacing));
  --tw-exit-translate-x: --value(--translate- *, [percentage], ratio, [length]);
}

.animate-light-up-orange {
  animation: lightUpOrange 1s ease-in-out infinite;
}

.card-spacer {
  border-top: 1px solid #f5f5f5;
  transition: border-color 0.3s ease;
}
